AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  VendorBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
  VendorBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: Allow
                Action: s3:ListBucket
                Resource: !GetAtt VendorBucket.Arn
              -
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !Join ['/', [!GetAtt VendorBucket.Arn, '*']]
          PolicyName: VendorBucketAccess
  Py3VendorBuild:
    Type: AWS::Serverless::Function
    Properties:
      Handler: vendor.build
      Runtime: python-3.6
      Role: !Ref VendorBuildRole
      Environment:
        Variables:
          BUCKET: !Ref VendorBucket
      Events:
        Build:
          Type: Api
          Properties:
            Path: '/3/{package}'
            Method: get
  Py2VendorBuild:
    Type: AWS::Serverless::Function
    Properties:
      Handler: vendor.build
      Runtime: python-2.7
      Environment:
        Variables:
          BUCKET: !Ref VendorBucket
      Events:
        Build:
          Type: Api
          Properties:
            Path: '/2/{package}'
            Method: get
