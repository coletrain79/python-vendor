AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  Packages:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
  VendRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: Allow
                Action: s3:ListBucket
                Resource: !GetAtt Packages.Arn
              -
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !Join [ '/', [ !GetAtt Packages.Arn, '*' ] ]
          PolicyName: PackagesBucketAccess
  Py3Vend:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambdavendor.vend
      Runtime: python3.6
      CodeUri: ./lambdavendor.py
      Role: !GetAtt VendRole.Arn
      Environment:
        Variables:
          BUCKET: !Ref Packages
      Events:
        Vend:
          Type: Api
          Properties:
            Path: /3/vend/{requirements}
            Method: get
            RestApiId: !Ref API
  Py2Vend:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambdavendor.vend
      Runtime: python2.7
      CodeUri: ./lambdavendor.py
      Role: !GetAtt VendRole.Arn
      Environment:
        Variables:
          BUCKET: !Ref Packages
      Events:
        Vend:
          Type: Api
          Properties:
            Path: /2/vend/{requirements}
            Method: get
            RestApiId: !Ref API
  API:
    Type: AWS::Serverless::API
    Properties:
      StageName: api
      DefinitionBody:
        swagger: '2.0'
        info:
          title: AWS Python Lambda Vendor
          version: '1.0'
        paths:
          /3/vend/{requirements}:
            get:
              responses:
                '200':
                  description: >-
                    Build package & dependency wheels for Python 3.
                    Returns a list of URLs to the package & dependency wheels.
            parameters:
              - name: requirements
                in: path
                required: true
                type: string
          /2/vend/{requirements}:
            get:
              responses:
                '200':
                  description: >-
                    Build package & dependency wheels for Python 2.
                    Returns a list of URLs to the package & dependency wheels.
            parameters:
              - name: requirements
                in: path
                required: true
                type: string
Outputs:
  Version:
    Value: '1.0'
  ServiceURL:
    Value: !Sub https://${API}.execute-api.${AWS::Region}.amazonaws.com/api/
