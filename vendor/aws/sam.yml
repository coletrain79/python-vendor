AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  VendorBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
  VendorBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: Allow
                Action: s3:ListBucket
                Resource: !GetAtt VendorBucket.Arn
              -
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !Join ['/', [!GetAtt VendorBucket.Arn, '*']]
          PolicyName: VendorBucketAccess
  Py3VendorBuild:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambdavendor.vend
      Runtime: python-3.6
      Role: !Ref VendorBuildRole
      Environment:
        Variables:
          BUCKET: !Ref VendorBucket
      Events:
        Build:
          Type: Api
          Properties:
            Path: '/3/vend/{requirements}'
            Method: get
            RestApiId: !Ref VendorAPI
  Py2VendorBuild:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambdavendor.vend
      Runtime: python-2.7
      Environment:
        Variables:
          BUCKET: !Ref VendorBucket
      Events:
        Build:
          Type: Api
          Properties:
            Path: '/2/vend/{requirements}'
            Method: get
            RestApiId: !Ref VendorAPI
  VendorAPI:
    Type: AWS::Serverless::API
    Properties:
      StageName: api
      DefinitionBody:
        swagger: '2.0'
        info:
          title: AWS Python Lambda Vendor
          version: !Ref Version
        paths:
          '/3/vend/{package}':
            get:
              responses:
                200:
                  description: >
                    Build package & dependency wheels for Python 3.
                    Returns list of URLs to the package & dependency wheels.
            parameters:
              - name: requirements
                in: path
                required: true
          '/2/vend/{package}':
            get:
              responses:
                200:
                  description: >
                    Build package & dependency wheels for Python 2.
                    Returns list of URLs to the package & dependency wheels.
            parameters:
              - name: requirements
                in: path
                required: true
Outputs:
  Version:
    Value: '1.0'
  ServiceURL:
    Value: !Sub https://${VendorAPI}.execute-api.${AWS::Region}.amazonaws.com/api/
